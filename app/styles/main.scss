/* Dependencies */
@import "compass/css3/inline-block";
@import "compass/utilities/sprites";
@import "compass/css3/background-size";
@import "compass/css3/transition";
@import "compass/typography/lists/bullets";
@import "compass/css3/opacity";
@import "compass/css3/text-shadow";
@import "compass/css3/transform";
@import "compass/css3/images";
@import "compass/css3/box-shadow";
@import "compass/css3/border-radius";

/* Global variables */
$content-width: 60rem;
$sky: #428bca;
$blue: #e8524b;
$red: #e8524b;
$font-color: #393939;

/* Global mixins */
$sprites: sprite-map("sprites/*.png");
$sprites2x: sprite-map("sprites2x/*.png");

@mixin sprite-background($name) {
    background-repeat: no-repeat;
    display: block;
    background-image: sprite-url($sprites);
    background-position: sprite-position($sprites, $name);
    height: image-height(sprite-file($sprites, $name));
    width: image-width(sprite-file($sprites, $name));

    @media only screen and (-webkit-min-device-pixel-ratio: 2),
           only screen and (   min--moz-device-pixel-ratio: 2),
           only screen and (     -o-min-device-pixel-ratio: 2/1),
           only screen and (        min-device-pixel-ratio: 2),
           only screen and (                min-resolution: 192dpi),
           only screen and (                min-resolution: 2dppx) {
        background-image: sprite-url($sprites2x);
        background-position: 0 round(nth(sprite-position($sprites2x, $name), 2) / 2);
        height: round(image-height(sprite-file($sprites2x, $name)) / 2);
        width: round(image-width(sprite-file($sprites2x, $name)) /2 );

        /* treat the @2x retina sprite sheet as 50% wide for double resolution upon display */
        @include background-size(ceil(image-width(sprite-path($sprites2x)) / 2) auto);
    }   

    @include background-size(image-width(sprite-path($sprites)) auto);
}

$small-width: 840px;
$small-height: 500px;

@mixin respond-to($media) {
    @each $rule in $media {
        @if $rule == small-width {
            @media only screen and (max-width: $small-width), print { @content; }
        }
        @else if $rule == small-height {
            @media only screen and (max-height: $small-height), print { @content; }
        }
        @else if $rule == retina {
            @media only screen and (-webkit-min-device-pixel-ratio: 2),
                   only screen and (   min--moz-device-pixel-ratio: 2),
                   only screen and (     -o-min-device-pixel-ratio: 2/1),
                   only screen and (        min-device-pixel-ratio: 2),
                   only screen and (                min-resolution: 192dpi),
                   only screen and (                min-resolution: 2dppx) { @content; }
        }
    }
}

@mixin disable-selection {
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

@mixin bg-cover($image, $attachment: fixed) {
    background: url($image) no-repeat center top $attachment; 
    background-size: 100% auto;
    -webkit-background-size: cover;
    -moz-background-size: cover;
    -o-background-size: cover;
    background-size: cover;
}

@mixin webfont ($italic: false) {
    @if $italic == true {
        font-family: "gentiumplus-i", Georgia, serif;
    }
    @else {
        font-family: "gentiumplus-r", Georgia, serif;
    }
}

%shadowed {
    @include single-box-shadow(rgba(0,0,0,0.6), 0, 1px, 4px, 0, false);
}

/* Global styles */
@font-face {
    font-family: 'gentiumplus-i';
    src: url('fonts/gentiumplus-i.eot');
    src: url('fonts/gentiumplus-i.eot?#iefix') format('embedded-opentype'),
         url('fonts/gentiumplus-i.woff') format('woff'),
         url('fonts/gentiumplus-i.ttf') format('truetype');
    font-weight: normal;
}


@font-face {
    font-family: 'gentiumplus-r';
    src: url('fonts/gentiumplus-r.eot');
    src: url('fonts/gentiumplus-r.eot?#iefix') format('embedded-opentype'),
         url('fonts/gentiumplus-r.woff') format('woff'),
         url('fonts/gentiumplus-r.ttf') format('truetype');
    font-weight: normal;
    font-style: normal;
}

body, html {
    height: 100%;
}

body {
    @include webfont;
    background: #fafafa;
    color: $font-color;
}

body > section {
    position: relative;
    z-index: 1;
    background: #fafafa;
    padding: 3em 1em;

    & + section {
        margin-top: 2em;
    }

    &:last-child {
        @include single-box-shadow(rgba(0,0,0,0.8), 0, 6px, 8px, 0, false);
    }
}

a {
    @include single-transition(color, 0.2s, ease-out, 0s);
    position: relative;
    color: $sky;

    &:before {
        content: "";
        @include single-transition(border-color, 0.2s, ease-out, 0s);
        @include opacity(0.3);
        position: absolute;
        bottom: 0.2em;
        left: 0;
        width: 100%;
        height: 0px;
        border-bottom: 1px solid $sky;
    }

    &:hover {
        text-decoration: none;
        color: $red;

        &:before {
            border-bottom: 1px solid $red;
        }
    }

    &:active, &:visited {
        text-decoration: none;
        color: $blue;

        &:before {
            border-bottom: 1px solid $blue;
        }
    }
}

@import "welcome";
@import "experience";
@import "footer";